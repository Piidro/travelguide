name: TestFlight release

on: 
  pull_request_review:
    types: [submitted]

jobs:
  # First checking that did we actually send the correct trigger word
  check:
    runs-on: macos-latest
    outputs: 
      triggered: ${{ steps.check.outputs.triggered }}
    steps: 
      - uses: ./pr-trigger
        id: check
        with:
          trigger: '/beta'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  build:
    # If trigger word was not correct, stop right here
    # Because otherwise every comment to PR will trigger this job
    needs: check
    if: needs.check.outputs.triggered == 'true'
    runs-on: macos-latest
    steps:
      - name: Greet
        run: echo "Greetings from build!"

#      - name: Checkout
#        uses: actions/checkout@v2
      
#      - name: Import signing certificate
#        env:
#          DEV_SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.DEV_CERTIFICATE_P12_DATA }}
#          DEV_SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.DEV_CERTIFICATE_PASSWORD }}
#          DIST_SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
#          DIST_SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
#        run: |
#          exec .github/scripts/import-certificate.sh

#      - name: Import provisioning profile
#        env:
#          DEV_PROVISIONING_PROFILE_DATA: ${{ secrets.DEV_PROVISIONING_PROFILE_DATA }}
#          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
#        run: |
#          exec .github/scripts/import-profile.sh

#      - name: Build archive
#        run: |
#          xcodebuild archive \
#            -project TravelGuide.xcodeproj \
#            -scheme "TravelGuide" \
#            -sdk iphoneos \
#            -configuration "Release" \
#            -archivePath $PWD/build/TravelGuide.xcarchive \
#            IPHONEOS_DEPLOYMENT_TARGET=13.0 \
#            CODE_SIGNING_REQUIRED=NO

#      - name: Export app
#        run: |
#          xcodebuild \
#            -exportArchive \
#            -archivePath $PWD/build/TravelGuide.xcarchive \
#            -exportOptionsPlist $PWD/ci.plist \
#            -exportPath $PWD/build

#      - name: Upload app to App Store Connect
#        env:
#          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
#          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
#        run: |
#          xcrun altool --upload-app -t ios -f "$PWD/build/TravelGuide.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
